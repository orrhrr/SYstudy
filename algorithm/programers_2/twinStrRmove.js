/*
짝지어 제거하기
문제 설명
짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다. 먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다. 그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다. 이 과정을 반복해서 문자열을 모두 제거한다면 짝지어 제거하기가 종료됩니다. 문자열 S가 주어졌을 때, 짝지어 제거하기를 성공적으로 수행할 수 있는지 반환하는 함수를 완성해 주세요. 성공적으로 수행할 수 있으면 1을, 아닐 경우 0을 리턴해주면 됩니다.

예를 들어, 문자열 S = baabaa 라면

b aa baa → bb aa → aa →

의 순서로 문자열을 모두 제거할 수 있으므로 1을 반환합니다.

제한사항
문자열의 길이 : 1,000,000이하의 자연수
문자열은 모두 소문자로 이루어져 있습니다.
입출력 예
s	result
baabaa	1
cdcd	0
*/



function solution(s) {
    let arr = [];
    for (i = 0; i < s.length; i++) {
       if(arr[arr.length - 1] === s[i]) { // arr의 마지막 값이 s의 현재 인덱스에 있는 값과 같으면  
           arr.pop(); // arr의 마지막값을 삭제
       } else { // 아니면
           arr.push(s[i]); // arr에 s[i]값을 추가 -> 이 값이 arr 배열의 마지막 값(arr[arr.length -1])이 된다.
       } // 삭제하고 남은 값과 다음 값을 비교할 수 있게 됨
    }

    return arr.length === 0 ? 1 : 0; // arr배열의 길이가 0이면 1, 아니면 0 반환
}