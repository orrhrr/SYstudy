// 명시적 타입변환 (타입캐스팅) : 개발자가 의도적으로 값의 타입을 변환하는 것
let x = 10;

// 명시적타입 변환(숫자 -> 문자)
let str = x.toString();
console.log(typeof str, str); // string 10

// x 변수의 값이 변경된 것은 아니다. (toString메서드를 사용할때만 형변환)
console.log(typeof x, x); // number 10




// 암묵적 타입변환 (강제변환) : 개발자의 의도와 상관없이 자바스크립트 엔진에 의해 암묵적으로 타입이 변환되는 것
let y = 10;

// 문자열 연결 연산자는 숫자 타입 y의 값을 바탕으로 새로운 문자열을 생성한다.
let str2 = y + '';
console.log(typeof str2, str2); //string 10

// y 변수의 값이 변경된 것은 아니다. (toString메서드를 사용할때만 형변환)
console.log(typeof y, y); // number 10

/* 위 예제의 암묵적 타입변환 순서

- 표현식 y + ''를 평가하기 위해 y 변수의 숫자 값을 바탕으로 새로운 문자열값 '10'을 생성한다.
- 표현식 '10' + ''를 평가한다. (이때 암묵적으로 생성된 문자열 '10'은 y 변수에 재할당되지 않는다.)
- 암묵적으로 생성된 문자열 '10'은 단 한번 사용하고 버려진다.

*/


// 명시적, 암묵적 타입변환이 기존 원시 값을 직접 변경하는 것은 아니다. (원시값은 변경 불가능한 값)
// 타입 변환이란 기존 원시값을 이용해 다른 타입의 새로운 원시값을 생성하는 것이다.
// 암묵적 타입 변환은 개발자의 의지가 코드에 명백히 드러나지 않으므로 자신의 코드에서 암묵적 타입 변환이 발생하는지, 발생한다면 어떤 타입의 값으로 변환되는지 등을 예측할 수 있어야 한다.
