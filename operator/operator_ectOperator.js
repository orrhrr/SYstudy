// 쉼표 연산자 : 왼쪽부터 차례대로 피연산자를 평가하고 마지막 피연산자의 평가가 끝나면 마지막 피연산자의 평가 결과를 반환한다.

var x, y, z;
x = 1, y = 2, z = 3; //3


// 그룹 연산자 : 소괄호()로 피연산자를 감싸면 해당 피연산자의 표현식을 가장 먼저 평가한다. (연산자 우선순위가 가장 높다.)
// 연산자 우선순위를 모두 기억하기 어렵기 떄문에 그룹 연산자를 사용하여 우선순위를 명시적으로 조절하는 것이 좋다.

10 * 2 + 3; // 23

10 * (2 + 3); //50




// 연산자의 부수효과 (값의 변화를 주어 해당 값을 사용하는 다른 코드에 영향을 준다.)
var x;

//할당 연산자는 변수 값이 변하는 부수 효과가 있다. 이는 x 변수를 사용하는 다른 코드에 영향을 준다.
x = 1;
console.log(x); // 1

// 증감 연산자(++/--)는 피연산자의 값을 변경하는 부수 효과가 있다.
// 피연산자 x의 값이 재할당되어 변경된다. 이는 x 변수를 사용하는 다른 코드에 영향을 준다.
x++;
console.log(x);  // 2

var o = {a : 1};

// delete 연산자는 객체의 프로퍼티를 삭제하는 부수 효과가 있다. 이는 o 객체를 사용하는 다른 코드에 영향을준다.
delete o.a;
console.log(o); //{}



// 연산자 결합 순서
// 좌항->우항 : + - / % < <= > >= && || . [] () ?? ?. in. instanceof
// 우항->좌할 : ++ -- 할당연산자(= += -= ...) !x +x -x ++x --x typeof delete ? ...:... **

