// 전역 변수의 문제점

// 1. 암묵적 결합: 모든 코드가 전역 변수를 참조하고 변경 할 수 있는 암묵적 결합 상태를 허용한다.
// 변수의 유효 범위가 클수록 코드의 가독성은 나빠지고 의도치 않게 상태가 변결될 수 있는 위험성도 높아진다.


// 2. 긴 생명 주기: 메모리 리소스를 오랜시간 소비하며, 전역 변수의 상태를 변경할 수 있는 시간도 길고 기회도 많다.
// var 키워드는 변수의 중복 선언을 허용하므로 생명 주기가 긴 전역 변수는 변수 이름이 중복될 가능성이 있다.

var x = 1;

// 변수의 중복 선언. 기존 변수에 값을 재할당한다. (의도치 않은 재할당이 이뤄질 수도 있다.)
var x = 100;
console.log(x); // 100


// 3. 스코프 체인 상에서 종점에 존재
// 변수를 검색할 때 전역 변수가 가장 마지막에 검색된다.
// 즉 전역 변수의 검색 속도가 가장 느리다.


// 4. 네임스페이스 오염
// 자바스크립트의 가장 큰 문제점 중 하나는 파일이 분리되어 있다해도 하나의 전역 스코프를 공유한다는 점이다.
// 따라서 다른 파일 내에서 동일한 이름으로 명명된 전역 변수나 전역 함수가 같은 스코프 내에 존재할 경우 예상치 못한 결과를 가져올 수 있다.

