// 즉시 실행 함수: 함수 정의와 동시에 즉시 호출되는 함수.
// 즉시 실행 함수는 단 한번만 호출되며 다시 호출할 수 없다.
// 즉시 실행 함수는 반드시 그룹 연산자()로 감싸야 한다. 그렇지 않으면 SyntaxError가 발생한다.
// 즉시 실행 함수 내에 코드를 모아두면 혹시 있을 수도 있는 변수나 함수 이름의 충돌을 방지할 수 있다.

// 익명 즉시 실행 함수(일반적으로 익명 함수를 사용한다.)
(function () {
    let a = 3;
    let b = 5;
    return a * b;
}());

// 기명 즉시 실행 함수
(function foo(){
    let a = 3;
    let b = 5;
    return a * b;
}());

foo(); // ReferenceError: foo is not defined (재호출 할 수 없다.)


// 그룹 연산자로 감싸지 않았을 경우
function() { // SyntaxError: Function statements require a function name
    //...
}();
// 함수 정의가 함수 선언문 형식에 맞지 않기 때문에 오류 발생(함수 선언문은 함수 이름을 생략할 수 없다.)

function foo() {
    // ...
}(); // SyntaxError: Unexpected token ')'
// 함수 코드 블록의 닫는 중괄호 뒤에 ;이 암묵적으로 추가되기 때문이다.
// 따라서 함수 선언문 뒤의 ()는 함수 호출 연산자가 아니라 그룹 연산자로 해석되고, 그룹연산자에 피연산자가 없기 때문에 에러가 발생한다.
// 기명 또는 무명 함수를 그룹 연산자로 감싸면 함수 리터럴로 평가되어 함수 객체가 된다.
// 즉, 그룹연산자로 함수를 묶은 이유는 먼저 함수 리터럴을 평가해서 함수 객체를 생성하기 위함이다.



// 즉시 실행 함수를 만드는 방법들
// 1. 함수 호출 연산자까지 괄호로 묶기
(function(){
    // ...
}());

// 2. 함수 호출 연산자를 마지막에 따로 쓰기
(function () {
    //...
})();

// 3. ! 사용하기
!function(){
    //...
}();

// 4. + 사용하기
+function(){
    //...
}();



// 즉시 실행 함수도 일반 함수처럼 값을 반환할 수 있다.
let res = (function(){
    let a = 3;
    let b = 5;
    return a * b;
})();

console.log(res); // 15

// 즉시 실행 함수에도 일반 함수처럼 인수를 전달할 수 있다.
res = (function (a ,b){
    return a * b;
})(3 ,5);

console.log(res); // 15